#summary nav6 IMU Protocol

= Overview =

In order to communicate sensor data to a client (e.g., a robot controller) the nav6 IMU software uses a custom protocol.  This protocol defines messages which are sent between the IMU and the client, and also includes an error detection capability to ensure corrupted data is not used by the client.

In order to enhance readability during debugging, the nav6 IMU protocol uses ASCII characters.

[https://code.google.com/p/nav6/source/browse/trunk/arduino/nav6/IMUProtocol.h Source code] that implements the nav6 IMU protocol is provided to simplify adding support for the nav6 IMU protocol to a software project.  The source code is contained within a single .h file.  As of the date of this writing, this source code is portable to both the Arduino platform as well as VxWorks.

= Header =

Each IMU message begins with "start of message" indicator (a '!' character), which indicates that the following bytes contain a message.

= Message ID =

Immediately following the "start of message", a one-byte Message ID character, which may be one of the following:

||
||ID||Message Type||
||'y'||Yaw/Pitch/Roll/Compass Heading||
||

= Formatting =

In keeping with the ASCII encoding of the nav6 IMU protocol, the following encoding is used for message elements:
[
||
||Data Type||Encoding||Example||
||Float||[Sign][100s][10s][1s].[10ths][1ths]||-132.96||
||8-bit Integer||[HighNibble][LowNibble]||'E9'||
||16-bit Integer||[HighByte,HighNibble][HighByte,LowNibble][LowByte,HighNibble][LowByte,LowNibble]||'1A0F'||
||

= Yaw/Pitch/Roll/Compass Heading =

{Yaw (Float)}{Pitch (Float)}{Roll (Float)}{CompassHeading (Float)}

= Checksum =

The final two bytes of each IMU protocol message are a checksum.